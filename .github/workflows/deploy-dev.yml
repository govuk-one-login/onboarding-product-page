name: Deploy to development
run-name: Deploy to development [${{ github.head_ref || github.ref_name }}]

on:
  merge_group:
    types:
      - checks_requested
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build frontend
    if: github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      artifact-name: ${{ steps.build.outputs.artifact-id }}
    steps:
      - name: Pull repository
        id: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Build
        id: build
        uses: ./.github/actions/build
        with:
          artifact-name: frontend-build-development

  push:
    name: Push dev
    if: github.event_name == 'merge_group'
    needs: [ build ]
    runs-on: ubuntu-latest
    concurrency:
      group: dev-deploy
    timeout-minutes: 20
    environment:
      name: development
      url: ${{ steps.push.outputs.pipeline-url }}
    outputs:
      pipeline-url: ${{ steps.push.outputs.pipeline-url }}
    steps:
      - name: Pull repository
        id: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Push
        id: push
        uses: ./.github/actions/push
        with:
          artifact-name: frontend-build-development
          artifact-bucket-name: ${{ vars.DEPLOYMENT_ARTIFACTS_BUCKET }}
          container-repository-name: ${{ vars.FRONTEND_CONTAINER_REPOSITORY_NAME }}
          deployment-role-arn: ${{ vars.DEPLOYMENT_ROLE_ARN }}
          dynatrace-pass-token: ${{ secrets.DYNATRACE_PAAS_TOKEN }}
          pipeline-name: ${{ vars.FRONTEND_PIPELINE_NAME }}
          test-container-repository-name: ${{ vars.TEST_ECR_REPOSITORY_NAME }}
