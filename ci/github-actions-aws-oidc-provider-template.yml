AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  GitHubOrg:
    Type: String
  RepositoryName:
    Type: String
  OIDCProviderArn:
    Description: Arn for the GitHub OIDC Provider.
    Default: ""
    Type: String
  DeploymentBucketNamePrefix:
    Type: String
    Default: sam-deployment-artifacts
  MonitoringStackNamePrefix:
    Type: String
    Default: di-product-page-monitor

Conditions:
  CreateOIDCProvider: !Equals
    - !Ref OIDCProviderArn
    - ""

Resources:
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !If
                - CreateOIDCProvider
                - !Ref GithubOIDC
                - !Ref OIDCProviderArn
            Condition:
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${RepositoryName}:*
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchSyntheticsFullAccess
      Policies:
        - PolicyName: GitHubActions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - iam:ListPolicies
                  - logs:DescribeLogGroups

              - Effect: Allow
                Resource:
                  - !Sub arn:aws:s3:::${DeploymentBucketNamePrefix}-*
                  - !Sub arn:aws:s3:::${MonitoringStackNamePrefix}*
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:GetBucket
                  - s3:ListBucket
                  - s3:CreateBucket
                  - s3:PutBucketPublicAccessBlock
                  - s3:PutLifecycleConfiguration

              - Effect: Allow
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/${MonitoringStackNamePrefix}*
                Action:
                  - iam:TagRole
                  - iam:GetRole
                  - iam:PassRole
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:GetRolePolicy
                  - iam:PutRolePolicy
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:UpdateAssumeRolePolicy

              - Effect: Allow
                Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${MonitoringStackNamePrefix}*
                Action:
                  - lambda:ListTags
                  - lambda:TagResource
                  - lambda:UntagResource
                  - lambda:GetFunction
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:AddPermission
                  - lambda:RemovePermission
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration

              - Effect: Allow
                Resource: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${MonitoringStackNamePrefix}*
                Action:
                  - sns:CreateTags
                  - sns:TagResource
                  - sns:CreateTopic
                  - sns:DeleteTopic
                  - sns:Subscribe
                  - sns:Unsubscribe
                  - sns:GetTopicAttributes
                  - sns:SetTopicAttributes
                  - sns:ListSubscriptionsByTopic
                  - sns:SetSubscriptionAttributes

              - Effect: Allow
                Resource: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${MonitoringStackNamePrefix}*
                Action:
                  - sqs:CreateQueue
                  - sqs:DeleteQueue
                  - sqs:GetQueueAttributes
                  - sqs:SetQueueAttributes

              - Effect: Allow
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${MonitoringStackNamePrefix}*/*
                  - !Sub arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-*
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeStackEvents
                  - cloudformation:GetTemplateSummary

              - Effect: Allow
                Resource: !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${MonitoringStackNamePrefix}*
                Action:
                  - cloudwatch:PutMetricAlarm
                  - cloudwatch:DeleteAlarms

              - Effect: Allow
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${MonitoringStackNamePrefix}*
                Action:
                  - logs:CreateLogGroup
                  - logs:DeleteLogGroup
                  - logs:PutRetentionPolicy

              - Effect: Allow
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/slack-*
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/canary-*
                Action: ssm:GetParameters

  GithubOIDC:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1

Outputs:
  Role:
    Value: !GetAtt Role.Arn
